// AdminLayout 样式文件 - 按照cool-admin的滚动权绑定原则重构
@use "@btc/styles/tokens/index.scss" as *;
@use "@btc/styles/mixins/index.scss" as *;

/* ========================================
   0) 先清场（把旧的全局样式撤掉）
   ======================================== */

/* 千万别在全局挂滚动条皮肤：撤销之前对 * / html / body 的伪元素样式 */
html::-webkit-scrollbar,
html::-webkit-scrollbar-thumb,
html::-webkit-scrollbar-track,
body::-webkit-scrollbar,
body::-webkit-scrollbar-thumb,
body::-webkit-scrollbar-track {
  all: unset;
}

/* 也别给根层稳定 gutter（会留下"限位器/两侧留白"） */
html, body { 
  scrollbar-gutter: auto !important; 
}

/* ========================================
   1) 无感滚动条设计变量（亮/暗统一管理）
   ======================================== */
:root {
  /* 滚动条尺寸 */
  --sb-w-main: 10px;          /* 主区厚度 */
  --sb-w-side: 8px;           /* 侧栏厚度 */
  
  /* 亮色主题滚动条颜色 */
  --sb-thumb:    rgba(0, 0, 0, 0.28);
  --sb-thumb-h:  rgba(0, 0, 0, 0.45);
  --sb-thumb-a:  rgba(0, 0, 0, 0.60);
}

/* 暗色主题变量 */
html.dark {
  --sb-thumb:    rgba(255, 255, 255, 0.28);
  --sb-thumb-h:  rgba(255, 255, 255, 0.45);
  --sb-thumb-a:  rgba(255, 255, 255, 0.65);
}

/* 高对比自动增强 */
@media (prefers-contrast: more) {
  :root {
    --sb-thumb:   rgba(0, 0, 0, 0.45);
    --sb-thumb-h: rgba(0, 0, 0, 0.60);
    --sb-thumb-a: rgba(0, 0, 0, 0.75);
  }
  
  html.dark {
    --sb-thumb:   rgba(255, 255, 255, 0.45);
    --sb-thumb-h: rgba(255, 255, 255, 0.60);
    --sb-thumb-a: rgba(255, 255, 255, 0.80);
  }
}

/* ========================================
   2) 原生滚动条版本（Chromium/WebKit + Firefox）
   ======================================== */

/* 所有内容滚动容器的通用样式 */
.scrollarea {
  overflow: auto;
  /* 关键：不预留滚动条空间，贴边、无轨道感 */
  scrollbar-gutter: auto;
  /* 让滚动容器在 grid/flex 下不撬宽父级 */
  min-width: 0; 
  min-height: 0;
  position: relative; /* 给覆盖条定位的基准 */
}



/* ========================================
   3) 根布局容器 - 使用容器查询，固定贴视口
   ======================================== */
.layout-shell {
  container-type: inline-size;
  height: 100vh;
  width: 100%;
  display: flex; /* 左右结构 */
  margin: 0;
  padding: 0;
  overflow: hidden; /* 防止根滚动 */
}

/* ========================================
   4) 侧边栏 - 左侧固定，如需滚动则给overflow:auto
   ======================================== */
.layout__aside {
  /* 基础样式 */
  background: var(--el-bg-color);
  border-right: 1px solid var(--el-border-color-light);
  transition: width 0.2s ease;
  flex-shrink: 0; /* 防止侧边栏被压缩 */
  
  /* 关键：避免zoom后撑爆父容器 */
  min-width: 0;
  min-height: 0;
  
  /* 侧栏本身不滚动，避免双滚 */
  overflow: hidden;
  
  /* 关键：flex 布局，让子元素正确滚动 */
  display: flex;
  flex-direction: column;
  
  /* 使用新的 overlay 滚动条系统 */
  &.scrollarea.scrollarea--side {
    /* 滚动条由 overlay 系统管理 */
  }
  
  /* 桌面模式：常驻侧栏 */
  @container (min-width: 1280px) {
    width: var(--sidebar-w, 14rem); /* 224px */
    min-width: var(--sidebar-w, 14rem);
    max-width: var(--sidebar-w, 14rem);
    
    /* 窄化状态 */
    &.is-collapsed {
      --sidebar-w: 4rem; /* 64px */
    }
  }
  
  /* 平板/手机模式：抽屉侧栏 */
  @container (max-width: 1279px) {
    position: fixed;
    left: 0;
    top: 0;
    bottom: 0;
    width: min(80vw, 20rem); /* 320px */
    transform: translateX(-100%); /* 默认收起 */
    box-shadow: 0 0.5rem 1.5rem rgba(0, 0, 0, 0.2);
    background: var(--el-bg-color);
    z-index: 50;
    
    /* 抽屉展开状态 */
    &.is-open {
      transform: translateX(0);
    }
  }
}

/* ========================================
   5) 右侧主内容区域
   ======================================== */
.layout__main {
  flex: 1; /* 占据剩余空间 */
  /* 关键：避免zoom后撑爆父容器 */
  min-width: 0;
  min-height: 0;
  display: flex;
  flex-direction: column;
  background: var(--el-bg-color-page);
  margin: 0;
  box-sizing: border-box;
  overflow: hidden; /* 防止主区域滚动，滚动权给内容区 */
}

/* ========================================
   6) 顶部导航栏
   ======================================== */
.layout__header {
  background: var(--el-bg-color);
  border-bottom: 1px solid var(--el-border-color-light);
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 0.75rem;
  height: 3rem;
  min-height: 3rem;
  margin: 0;
  box-sizing: border-box;
  flex-shrink: 0; /* 防止头部被压缩 */
  
  .header-left {
    display: flex;
    align-items: center;
    gap: 0;
    margin: 0;
    
    .collapse-btn {
      width: 1.75rem;
      height: 1.75rem;
      min-inline-size: 40px; /* 500%缩放仍可点 */
      min-block-size: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 0.375rem;
      border: 1px solid var(--el-border-color-light);
      background: var(--el-bg-color);
      cursor: pointer;
      color: var(--el-text-color-regular);
      transition: all 0.2s ease;
      
      &:hover {
        background: var(--el-color-primary-light-9);
        border-color: var(--el-color-primary-light-7);
        color: var(--el-color-primary);
        transform: translateY(-1px);
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.1);
      }
      
      &:active {
        transform: translateY(0);
        box-shadow: 0 0.0625rem 0.125rem rgba(0, 0, 0, 0.1);
      }
    }
  }
  
  .header-right {
    display: flex;
    align-items: center;
    gap: 0.375rem;
    margin: 0;
    
    .theme-toggle-btn {
      width: 1.75rem;
      height: 1.75rem;
      min-inline-size: 40px;
      min-block-size: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 0.375rem;
      border: 1px solid var(--el-border-color-light);
      background: var(--el-bg-color);
      cursor: pointer;
      color: var(--el-text-color-regular);
      transition: all 0.2s ease;
      
      &:hover {
        background: var(--el-color-primary-light-9);
        border-color: var(--el-color-primary-light-7);
        color: var(--el-color-primary);
        transform: translateY(-1px);
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.1);
      }
      
      &:active {
        transform: translateY(0);
        box-shadow: 0 0.0625rem 0.125rem rgba(0, 0, 0, 0.1);
      }
    }
    
    .user-avatar {
      cursor: pointer;
      border: 0.125rem solid var(--el-border-color-light);
      
      &:hover {
        border-color: var(--el-color-primary);
      }
    }
  }
}

/* ========================================
   7) TabBar 样式 - 修复主题切换时的闪烁问题
   ======================================== */
.tabbar {
  background: var(--el-bg-color);
  border-bottom: 1px solid var(--el-border-color-light);
  margin: 0;
  height: 2.25rem;
  min-height: 2.25rem;
  padding: 0;
  display: flex;
  align-items: center;
  contain: layout style;
  flex-shrink: 0; /* 防止TabBar被压缩 */
  
  /* 关键：防止主题切换时的滚动条闪烁 */
  overflow: hidden; /* 隐藏可能的滚动条 */
  
  /* 确保TabBar在主题切换时保持稳定 */
  position: relative;
  z-index: 10;
  
  * {
    box-sizing: border-box;
  }
}

/* ========================================
   8) 内容容器
   ======================================== */
.layout__content {
  flex: 1; /* 占据剩余空间 */
  /* 关键：避免zoom后撑爆父容器 */
  min-width: 0;
  min-height: 0;
  overflow: hidden; /* 防止内容容器滚动，滚动权给页面内容区 */
  padding: 0;
  margin: 0;
  background: var(--el-bg-color-page);
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
}

/* ========================================
   9) 面包屑容器
   ======================================== */
.breadcrumb-container {
  background: var(--el-bg-color);
  border-bottom: 1px solid var(--el-border-color-light);
  padding: 0.75rem;
  flex-shrink: 0; /* 防止面包屑被压缩 */
  height: 3rem;
  display: flex;
  align-items: center;
  margin: 0;
  
  .breadcrumb {
    font-size: 0.875rem;
    color: var(--el-text-color-secondary);
    margin: 0;
  }
}

/* ========================================
   10) 页面内容区域 - 真正的滚动容器
   ======================================== */
.page-content {
  flex: 1; /* 占据剩余空间 */
  /* 关键：避免zoom后撑爆父容器 */
  min-width: 0;
  min-height: 0;
  /* 真正的滚动条在这里 */
  overflow: auto;
  overscroll-behavior: contain; /* 防止父级被带着滚 */
  
  /* 移除固定边距，让内容充分利用可用空间 */
  margin: 0;
  background: var(--el-bg-color);
  border: none; /* 移除边框，让内容更贴近容器边缘 */
  border-radius: 0; /* 移除圆角，让内容更贴近容器边缘 */
  padding: 1rem; /* 减少内边距，让内容有更多空间 */
  box-shadow: none; /* 移除阴影，让内容更贴近容器边缘 */
  box-sizing: border-box;
  max-width: 100%;
  display: flex;
  flex-direction: column;
  
  /* 确保滚动条完全贴边，没有间隙 */
  position: relative;
  
  /* 使用新的 overlay 滚动条系统 */
  &.scrollarea.scrollarea--main {
    /* 滚动条由 overlay 系统管理 */
  }
  
  /* 确保内容区域不被滚动条挤压 */
  & > * {
    margin-right: 0 !important;
    padding-right: 0 !important;
  }
  
  /* 页面内容区域 - 固定布局 */
  .page-body-container {
    flex: 1;
    min-height: 0;
    overflow: hidden; /* 内容区域不滚动，滚动权给父容器 */
    
    /* 页面内容现在由 PageLayoutWrapper 组件统一管理样式 */
    /* 这里只需要确保容器能够正确显示子组件 */
  }
  
  /* 内容区域内的通用样式 */
  .section-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 1rem;
    padding-bottom: 0.75rem;
    border-bottom: 1px solid var(--el-border-color-lighter);
    
    .section-title {
      margin: 0;
      font-size: 1rem;
      font-weight: 600;
      color: var(--el-text-color-primary);
    }
  }
  
  .filter-section,
  .user-section,
  .module-section,
  .config-section,
  .route-detail {
    margin-bottom: 1.5rem;
    
    &:last-child {
      margin-bottom: 0;
    }
  }
  
  /* 移除内部卡片的冗余样式 */
  .el-card {
    border: none !important;
    box-shadow: none !important;
    background: transparent !important;
    
    .el-card__header {
      padding: 0 !important;
      border-bottom: 1px solid var(--el-border-color-lighter);
      margin-bottom: 1rem;
    }
    
    .el-card__body {
      padding: 0 !important;
    }
  }
}

/* ========================================
   11) 抽屉遮罩 - 仅在平板/手机模式出现
   ======================================== */
.backdrop {
  @container (max-width: 1279px) {
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.35);
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.2s ease;
    z-index: 40;
    
    &.is-open {
      opacity: 1;
      pointer-events: auto;
    }
  }
  
  /* 桌面模式下不显示 */
  @container (min-width: 1280px) {
    display: none;
  }
}

/* ========================================
   12) 侧边栏内容样式
   ======================================== */
.sidebar-menu {
  border: none;
  transition: width 0.3s ease;
  
  /* 关键：让侧边栏菜单成为滚动宿主 */
  flex: 1 1 auto;
  min-height: 0;      /* 防止 flex 子项撑破，关键 */
  overflow: auto;     /* 保证它自己滚 */
  
  /* 确保Element Plus菜单样式正确应用 */
  .el-menu {
    border: none;
    background: transparent;
  }
  
  .el-menu-item {
    transition: background-color 0.2s ease, color 0.2s ease;
    color: var(--el-text-color-regular) !important;
    
    &:hover {
      background: var(--el-fill-color-light) !important;
      color: var(--el-color-primary) !important;
    }
    
    &.is-active {
      background: var(--el-color-primary) !important;
      color: #ffffff !important;
      
      .menu-icon {
        color: #ffffff !important;
      }
      
      .menu-title {
        color: #ffffff !important;
      }
      
      span {
        color: #ffffff !important;
      }
      
      * {
        color: #ffffff !important;
      }
    }
  }
  
  .el-sub-menu__title {
    color: var(--el-text-color-regular) !important;
    font-weight: 500;
    
    &:hover {
      background: var(--el-fill-color-light) !important;
      color: var(--el-color-primary) !important;
    }
    
    .menu-icon {
      color: var(--el-text-color-regular) !important;
    }
    
    .menu-title {
      color: var(--el-text-color-regular) !important;
    }
  }
  
  /* 子菜单样式 */
  .el-sub-menu {
    .el-menu-item {
      &:hover {
        background: var(--el-fill-color-light) !important;
        color: var(--el-color-primary) !important;
      }
      
      &.is-active {
        background: var(--el-color-primary) !important;
        color: #ffffff !important;
        
        .menu-icon {
          color: #ffffff !important;
        }
        
        .menu-title {
          color: #ffffff !important;
        }
      }
    }
  }
  
  .menu-icon {
    margin-right: $spacing-2;
    width: 1rem;
    height: 1rem;
    color: var(--el-text-color-regular);
  }
  
  .menu-title {
    font-size: 0.875rem;
    color: var(--el-text-color-regular);
    transition: opacity 0.3s ease, transform 0.3s ease;
    /* 防止字体度量变来变去 */
    opacity: 0.999;
    white-space: nowrap;
    overflow: hidden;
  }
  
  /* 收起状态下的特殊处理 */
  .layout__aside.is-collapsed & {
    .el-menu-item,
    .el-sub-menu__title {
      justify-content: center;
      padding: 0 1rem;
      
      .menu-icon {
        margin-right: 0;
      }
      
      .menu-title {
        opacity: 0;
        transform: translateX(-1.25rem);
        pointer-events: none;
      }
    }
    
    .el-sub-menu__icon-arrow {
      opacity: 0;
    }
  }
}

/* ========================================
   13) Logo 样式
   ======================================== */
.logo {
  height: 3rem;
  display: flex;
  align-items: center;
  justify-content: center;
  border-bottom: 1px solid var(--el-border-color-light);
  background: var(--el-bg-color);
  padding: 0 1rem;
  
  .logo-img {
    width: 2rem;
    height: 2rem;
    margin-right: $spacing-2;
  }
  
  .logo-text {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--el-text-color-primary);
    transition: opacity 0.3s ease, transform 0.3s ease;
    opacity: 0.999;
    white-space: nowrap;
    overflow: hidden;
  }
}

/* ========================================
   14) 桌面模式下的收起状态
   ======================================== */
@container (min-width: 1280px) {
  .layout__aside.is-collapsed {
    .logo {
      justify-content: center;
      padding: 0 1rem;
      
      .logo-img {
        margin-right: 0;
      }
      
      .logo-text {
        opacity: 0;
        transform: translateX(-1.25rem);
      }
    }
    
    .sidebar-menu {
      .menu-item,
      .el-sub-menu__title {
        justify-content: center;
        padding: 0 1rem;
        
        .menu-icon {
          margin-right: 0;
        }
        
        .menu-title {
          opacity: 0;
          transform: translateX(-1.25rem);
          pointer-events: none;
        }
      }
      
      .el-sub-menu__icon-arrow {
        opacity: 0;
      }
    }
  }
}

/* ========================================
   15) 全屏内容模式
   ======================================== */
.layout.is-content-full {
  .layout__aside {
    display: none !important;
  }
  
  .tabbar {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 2.25rem;
    margin: 0;
    padding: 0;
    z-index: 1000;
    background: var(--el-bg-color);
    border-bottom: 1px solid var(--el-border-color-light);
  }
  
  .layout__content {
    padding: 0;
    margin: 0;
    height: calc(100vh - 2.25rem);
    margin-top: 2.25rem;
    overflow: auto;
  }
}

/* ========================================
   16) Element Plus 的 <el-scrollbar> 支持（自绘版本）
   ======================================== */

/* 主内容区里的 el-scrollbar */
.layout__main .el-scrollbar {
  --sb-w: var(--sb-w-main);
  --sb-thumb: var(--sb-thumb);
  --sb-thumb-h: var(--sb-thumb-h);
  --sb-thumb-a: var(--sb-thumb-a);
}

/* 侧边栏里的 el-scrollbar */
.layout__aside .el-scrollbar {
  --sb-w: var(--sb-w-side);
  --sb-thumb: var(--sb-thumb);
  --sb-thumb-h: var(--sb-thumb-h);
  --sb-thumb-a: var(--sb-thumb-a);
}

/* 轨道条（垂直/水平） */
.el-scrollbar__bar.is-vertical {
  width: var(--sb-w);
  right: 0;
  background: transparent !important; /* 轨道透明 */
}

.el-scrollbar__bar.is-horizontal {
  height: var(--sb-w);
  bottom: 0;
  background: transparent !important; /* 轨道透明 */
}

/* 拇指：默认透明，悬停时淡入 */
.el-scrollbar__thumb {
  background: var(--sb-thumb) !important;
  border-radius: 999px !important; /* 圆弧 */
  opacity: 0; /* 默认不可见 */
  transition: opacity 0.12s ease, background-color 0.12s ease;
}

.el-scrollbar:hover .el-scrollbar__thumb,
.el-scrollbar:active .el-scrollbar__thumb { 
  opacity: 1; /* 悬停/激活时淡入 */
}

.el-scrollbar__thumb:hover { 
  background: var(--sb-thumb-h) !important; 
}

.el-scrollbar__thumb:active { 
  background: var(--sb-thumb-a) !important; 
}

/* ========================================
   17) 主题切换时的滚动条稳定性增强
   ======================================== */

/* 防止主题切换时的滚动条闪烁 */
html[data-theme-from] *,
html[data-theme-to] *,
html[data-vt-active] *,
html[data-vt-cooldown] * {
  /* 禁用所有过渡动画，避免滚动条样式变化 */
  transition: none !important;
  animation: none !important;
}

/* 确保滚动条在主题切换期间保持正确的无感状态 */
html[data-theme-from] .page-content,
html[data-theme-to] .page-content,
html[data-vt-active] .page-content,
html[data-vt-cooldown] .page-content,
html[data-theme-from] .layout__aside,
html[data-theme-to] .layout__aside,
html[data-vt-active] .layout__aside,
html[data-vt-cooldown] .layout__aside {
  /* 保持无感滚动条样式 */
  scrollbar-width: thin !important;
  scrollbar-color: var(--sb-thumb) transparent !important;
  
  /* 滚动条由 overlay 系统管理 */
}

/* 修复TabBar底部闪烁问题 */
html[data-theme-from] .tabbar,
html[data-theme-to] .tabbar,
html[data-vt-active] .tabbar,
html[data-vt-cooldown] .tabbar {
  /* 确保TabBar在主题切换时保持稳定 */
  background: var(--el-bg-color) !important;
  border-bottom-color: var(--el-border-color-light) !important;
  
  /* 防止底部出现滚动条残留 */
  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: var(--el-border-color-light);
    z-index: 1;
  }
}

/* 修复内容区域数据抖动问题 */
html[data-theme-from] .page-content *,
html[data-theme-to] .page-content *,
html[data-vt-active] .page-content *,
html[data-vt-cooldown] .page-content * {
  /* 防止内容在主题切换时重新布局 */
  transform: translateZ(0) !important; /* 启用硬件加速 */
  backface-visibility: hidden !important; /* 防止闪烁 */
  perspective: 1000px !important; /* 3D变换上下文 */
}

/* 主题切换完成后的平滑恢复 */
html:not([data-theme-from]):not([data-theme-to]):not([data-vt-active]):not([data-vt-cooldown]) {
  .page-content,
  .layout__aside {
    /* 恢复正常的过渡动画 */
    transition: background-color 0.3s ease, border-color 0.3s ease;
    
    /* 滚动条由 overlay 系统管理 */
  }
  
  .tabbar {
    /* 移除强制样式，恢复正常状态 */
    &::after {
      display: none;
    }
  }
}
